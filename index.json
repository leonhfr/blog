[
  {"body":"Shell scripts are awesome. They are so useful to automate repetitive and boring work. The hardest thing about them is documentation though. How often have you written one, put it in the bin directory and forgot all about it? How cool would it be to have a help message for them?\nWe could, of course, implement it with a bunch of echo calls. But there\u0026rsquo;s a neat trick. I originally learned it in a blog post by Egor Kovetskiy, but it seems it\u0026rsquo;s not available anymore. As it was very useful to me, I\u0026rsquo;m putting it out there again.\nAdd your help message as comments at the top of your file, right after the shebang.\n#!/bin/bash ### ### my-script — does one thing well ### ### Usage: ### my-script \u0026lt;input\u0026gt; \u0026lt;output\u0026gt; ### ### Options: ### \u0026lt;input\u0026gt; Input file to read. ### \u0026lt;output\u0026gt; Output file to write. Use \u0026#39;-\u0026#39; for stdout. ### -h Show this message. Next, we need to get this message using sed.\nsed -rn \u0026#39;s/^### ?//p\u0026#39; \u0026#34;$0\u0026#34; What\u0026rsquo;s happening here:\n$0 is the filename of the file that is being executed; -r flag means using extended regular expressions; -n flag prevents sed from echoing each line to the standard output; s stands for substitution of the following pattern; / defines the start and end of the pattern; ^### ? matches a string starting with ### followed by an optional space; // defines the substitution string, here an empty string; p prints the result of the substitution. Now, we just need to call this if an -h argument or no arguments are passed.\nif [[ $# == 0 ]] || [[ \u0026#34;$1\u0026#34; == \u0026#34;-h\u0026#34; ]]; then sed -rn \u0026#39;s/^### ?//p\u0026#39; \u0026#34;$0\u0026#34; exit 0 fi Hope it helps!\n","title":"Help Message for Shell Scripts","url":"https://leonh.fr/help-message-for-shell-scripts/"}, {"body":"I am an architect (as in, buildings) turned software engineer. I\u0026rsquo;m currently working at UserZoom and was previously working at AdSecure.\nI code in TypeScript, Golang, and Rust.\nGithub: leonhfr\n","title":"About","url":"https://leonh.fr/about/"}, {"body":" \u0026ldquo;Hello, friend?\u0026rdquo; That\u0026rsquo;s lame. Maybe I should give you a name\u0026hellip; But that\u0026rsquo;s a slippery slope. You\u0026rsquo;re only in my head. We have to remember that\u0026hellip; Shit. It\u0026rsquo;s actually happened. I\u0026rsquo;m talking to an imaginary person.\n— Mr. Robot S01E01\nThis is the start of yet another developer blog. It\u0026rsquo;s been a long time coming as I have always wanted to have a blog but I have been postponing it.\nPowered by Hugo with theme Anubis.\nThis blog uses Github features extensively:\nGithub Pages for hosting Github Actions for deployment Github issues for comments (via utteranc.es) ","title":"Hello, friend","url":"https://leonh.fr/hello-friend/"}
]
