let wasm;const cachedTextDecoder=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});cachedTextDecoder.decode();let cachedUint8Memory0=new Uint8Array;function getUint8Memory0(){return cachedUint8Memory0.byteLength===0&&(cachedUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachedUint8Memory0}function getStringFromWasm0(e,t){return cachedTextDecoder.decode(getUint8Memory0().subarray(e,e+t))}const heap=new Array(32).fill(void 0);heap.push(void 0,null,!0,!1);let heap_next=heap.length;function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}let WASM_VECTOR_LEN=0;const cachedTextEncoder=new TextEncoder("utf-8"),encodeString=typeof cachedTextEncoder.encodeInto=="function"?function(e,t){return cachedTextEncoder.encodeInto(e,t)}:function(e,t){const n=cachedTextEncoder.encode(e);return t.set(n),{read:e.length,written:n.length}};function passStringToWasm0(e,t,n){if(n===void 0){const n=cachedTextEncoder.encode(e),s=t(n.length);return getUint8Memory0().subarray(s,s+n.length).set(n),WASM_VECTOR_LEN=n.length,s}let o=e.length,i=t(o);const a=getUint8Memory0();let s=0;for(;s<o;s++){const t=e.charCodeAt(s);if(t>127)break;a[i+s]=t}if(s!==o){s!==0&&(e=e.slice(s)),i=n(i,o,o=s+e.length*3);const t=getUint8Memory0().subarray(i+s,i+o),a=encodeString(e,t);s+=a.written}return WASM_VECTOR_LEN=s,i}function getObject(e){return heap[e]}function dropObject(e){if(e<36)return;heap[e]=heap_next,heap_next=e}function takeObject(e){const t=getObject(e);return dropObject(e),t}function search(e,t){const n=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),s=WASM_VECTOR_LEN,o=wasm.search(n,s,t);return takeObject(o)}async function load(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t);else throw t}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}function getImports(){const e={};return e.wbg={},e.wbg.__wbindgen_json_parse=function(e,t){const n=JSON.parse(getStringFromWasm0(e,t));return addHeapObject(n)},e}function initMemory(){}function finalizeInit(e,t){return wasm=e.exports,init.__wbindgen_wasm_module=t,cachedUint8Memory0=new Uint8Array,wasm}function initSync(e){const t=getImports();initMemory(t),e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e));const n=new WebAssembly.Instance(e,t);return finalizeInit(n,e)}async function init(e){typeof e=="undefined"&&(e=new URL("tinysearch_engine_bg.wasm",import.meta.url));const t=getImports();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e)),initMemory(t);const{instance:n,module:s}=await load(await e,t);return finalizeInit(n,s)}async function loadWasm(){await init("../../wasm/tinysearch_engine_bg.wasm")}async function loadSearch(){const s=document.getElementById("search_btn"),e=document.getElementById("search_menu_wrapper"),o=document.getElementById("search_menu_close_btn"),t=document.getElementById("search_menu_input"),n=document.getElementById("search_menu_results");s.addEventListener("click",function(){e.classList.remove("hidden"),t.focus()}),o.addEventListener("click",function(){e.classList.add("hidden")}),t.addEventListener("input",function(){i(this.value)});function i(e){const t=search(e,10);if(n.innerHTML="",t.length===0)return;const s=document.createElement("ul");for(const n of t){const o=document.createElement("li"),e=document.createElement("a");e.innerHTML=n[0],e.setAttribute("href",n[1]),o.appendChild(e),s.appendChild(o)}n.appendChild(s)}}window.addEventListener("DOMContentLoaded",loadWasm),window.addEventListener("DOMContentLoaded",loadSearch)